---
- name: Assert that the prerequisites are defined
  tags: ius
  assert:
    that:
      - ius_pkg is defined
      - ius_rel is defined

- name: Attempting to set CentOS archive, dist, and repo facts
  tags: ius
  set_fact:
    ius_archive: 'CentOS'
    ius_dist: "centos{{ ius_rel }}"
    ius_repo: "ius-centos{{ ius_rel }}"
  when: ansible_distribution == 'CentOS'

- name: Attempting to set RedHat archive, dist, and repo facts
  tags: ius
  set_fact:
    ius_archive: 'Redhat'
    ius_dist: "rhel{{ ius_rel }}"
    ius_repo: "ius-el{{ ius_rel }}"
  when: ansible_distribution == 'RedHat'

- name: Attempting to generate temporary file
  tags: ius
  tempfile:
    prefix: 'ius.'
    state: file
    suffix: '.rpm'
  register: ius_tempfile
  check_mode: no

- name: Attempting to download package to temporary location
  tags: ius
  get_url:
    dest: "{{ ius_tempfile.path }}"
    force: yes
    url: "http://{{ ius_dist }}.iuscommunity.org/{{ ius_pkg }}.rpm"
  check_mode: no

- name: Ensure that the {{ ius_pkg }} package is installed
  tags: ius
  become: true
  register: yum_package
  yum:
    disable_plugin: "{{ ius_disable_plugin|join(',') or omit }}"
    disablerepo: "{{ ius_disablerepo|join(',') or omit }}"
    enable_plugin: "{{ ius_enable_plugin|join(',') or omit }}"
    enablerepo: "{{ ius_enablerepo|join(',') or omit }}"
    name: "{{ ius_tempfile.path }}"
    state: present

- name: Attempting to purge temporary package from the filesystem
  tags: ius
  file:
    path: "{{ ius_tempfile.path }}"
    state: absent

- name: Attempting to overlay ius repository configurations
  tags: ius
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - { src: ius.repo.j2, dst: /etc/yum.repos.d/ius.repo }
    - { src: ius-archive.repo.j2, dst: /etc/yum.repos.d/ius-archive.repo }
    - { src: ius-testing.repo.j2, dst: /etc/yum.repos.d/ius-testing.repo }
  loop_control:
    label: "{{ item.src.split('.')[0] }}"

- name: Ensure that the ius gpg keys are installed
  tags: ius
  become: true
  rpm_key:
    key: "{{ ius_rpm_key }}"
    state: present
  ignore_errors: "{{ ansible_check_mode and yum_package.changed }}"

- name: Ensure that the required ius packages are installed
  tags: ius
  become: true
  yum:
    disable_plugin: "{{ ius_disable_plugin|join(',') or omit }}"
    disablerepo: "{{ ius_disablerepo|join(',') or omit }}"
    enable_plugin: "{{ ius_enable_plugin|join(',') or omit }}"
    enablerepo: "{{ ius_enablerepo|join(',') or omit }}"
    name: "{{ item }}"
    state: present
  loop: "{{ ius_packages }}"
...
